// 디자인 패턴의 핵심 #1. 변하지 않은 코드에서 변하는 것 분리
// 디자인 패턴의 핵심 #2. 재귀적 포함을 많이 사용한다.


// 디자인 패턴의 핵심 #3. 어떤 문제를 해결하기 위해 중간층(간접층)을 도입해라!!

// 왜 ? 어떤의도로 중간계층을 만드는가에 따라 다른 패턴이 됩니다.

// 사용자 =============== stack ===================> list
//									=> 다른 것처럼 보이도록 인터페이스 변경
//									=> "adapter"

// 사용자 =============== Calc  ===================> Calc Server
//									=> 다양한 의도의 대신할것을 만드는 것
//									=> Proxy

// 사용자 =============== TCPServer ================> IPAddress, Socket
//									=> 복잡한 과정을 한번에 할수 있는
//									=> 사용하기 쉽게 하기 위한 중간층
//									=> facade(건물의 정문)

// 사용자 =============== MP3 ======================> IMP3
//									=> 구현층과 간접층(추상층, 사용자가 사용하는 계층)
//									=> 의 상호 독립적인 업데이트
//									=> Bridge